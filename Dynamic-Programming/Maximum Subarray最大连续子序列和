For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

//dp思路：
1.dp[i]表示以第i个元素nums[i]为结尾的最大子序列和（dp[4]表示 [-2,1,-3,4,-1] 的最大子序列和）
2.状态转移方程dp[i]=max(dp[i-1]+nums[i], nums[i])。

https://leetcode.com/problems/maximum-subarray/
class Solution {
public:
    int maxSubArray(vector<int>& nums) {
        if(nums.size()==0) return 0;
        
        int res=nums[0];
        vector<int>dp(nums.size(),nums[0]);
        
        for(int i=1;i<nums.size();++i){
            dp[i]=max(dp[i-1]+nums[i],nums[i]);
            res=max(dp[i],res);
        }
        return res;
    }
};
